---
import ButtonLink from '@components/ui/ButtonLink.astro';
import Card from '@components/ui/Card.astro';
import { INPUT } from '@config/input.ts';
import { SITE } from '@config/site.ts';
import type { SocialPreviewId } from '@config/social-preview.ts';
import { THEME, type ThemeId } from '@config/theme.ts';
import { getLocale, getLocaleStrings } from '@i18n/index.ts';
import { Link } from '@lucide/astro';
import { getRelativeLocaleUrl } from 'astro:i18n';
import type { WithChildren } from '../types.ts';
import BaseLayout from './BaseLayout.astro';

/**
 * Props for the social media preview image layout.
 *
 * @property type - The social platform type, determining dimensions ('og' for Open Graph 1200x630, 'twitter' for Twitter Card 800x418)
 */
interface Props extends WithChildren<false> {
	type: SocialPreviewId;
}

const currentLocaleId = getLocale(Astro);
const msg = getLocaleStrings(currentLocaleId);
const themeIds: ThemeId[] = ['light', 'dark', 'teal'];

const label = new URL(SITE.url.base).host;

const { type } = Astro.props;
---

<BaseLayout>
	<meta slot="head" name="robots" content="noindex,nofollow" />
	<main class={type}>
		<header>
			<Card>
				<ButtonLink to={SITE.url.base} {label} icon={Link} />
			</Card>
			<p>
				{msg.site.description}
			</p>
		</header>
		<section>
			{
				themeIds.map((themeId) => (
					<figure>
						{/* the scrolling attribute is deprecated, but this is by far the easiest way to hide scrollbars in an iframe */}
						<iframe
							scrolling="no"
							src={`${getRelativeLocaleUrl(currentLocaleId)}?${THEME.id}=${themeId}&${INPUT.id}=${msg.input.placeholder}`}
						/>
					</figure>
				))
			}
		</section>
	</main>
</BaseLayout>

<style>
	/* Use stronger shadows than the default */
	body {
		--shadow: oklch(0 0 0) !important;
	}

	main {
		display: flex;
		flex-direction: column;
		justify-content: end;
		align-items: center;
		flex: 1;
		width: 100%;
		overflow: hidden;
		background-image: radial-gradient(
			farthest-corner circle at 50% 100% in oklch,
			var(--bg-3),
			oklch(0% 0 0 / 0.5)
		);
	}

	header {
		display: flex;
		flex-direction: column;
		justify-content: space-evenly;
		align-items: center;
		flex: 1;
		text-align: center;
	}

	p {
		margin: 0 var(--p-md);
		font-size: var(--font-lg);
	}

	section {
		display: flex;
		flex-direction: row;
		justify-content: center;
		align-items: end;
	}

	figure {
		--scale: 75%;
		--offset: 55%;

		flex: 1;
		height: 65vh;
		width: 40vw;
		margin-block-end: calc(-1 * var(--radius-md));
		border-radius: var(--radius-md);
		box-shadow: var(--box-shadow-lg);
		overflow: hidden;

		&:nth-of-type(1) {
			transform-origin: 100% 100%;
			transform: scale(var(--scale)) translateX(var(--offset));
		}

		&:nth-of-type(2) {
			transform-origin: 50% 100%;
			border: var(--border-md) solid var(--primary);
			z-index: 1;
		}

		&:nth-of-type(3) {
			transform-origin: 0% 100%;
			transform: scale(var(--scale)) translateX(calc(-1 * var(--offset)));
		}
	}

	iframe {
		--scale: 0.55;

		width: calc(100% / var(--scale));
		height: calc(100% / var(--scale));
		border: none;
		transform-origin: 0 0;
		transform: scale(var(--scale));
	}
</style>
