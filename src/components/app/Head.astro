---
import { FONTS } from '@config/fonts.ts';
import { SITE } from '@config/site';
import { THEME } from '@config/theme.ts';
import { getLocale, getLocaleStrings } from '@i18n/index.ts';
import iconIco from '@images/favicon.ico';
import iconPng from '@images/icon-solid.png';
import iconSvg from '@images/icon.svg';
import logoSvg from '@images/logo.svg';
import { pathToAbsoluteUrl } from '@utils/index.ts';
import { Head as CapoHead } from 'astro-capo';
import { Font, getImage } from 'astro:assets';
import SocialImageMetadata from './SocialImageMetadata.astro';

/**
 * Props for the document head section.
 *
 * @property children - Optional additional head elements (e.g., page-specific meta tags)
 */
type Props = {
	children?: astroHTML.JSX.Element;
};

const appleTouchIcon = await getImage({
	src: iconPng,
	format: 'png',
	width: 180,
	height: 180,
	layout: 'none',
});

const currentLocaleId = getLocale(Astro);
const msg = getLocaleStrings(currentLocaleId).site;
---

<CapoHead>
	<meta charset="utf-8" />
	<meta
		name="viewport"
		content="width=device-width,initial-scale=1,user-scalable=yes"
	/>
	<title>{msg.title}</title>
	<meta name="description" content={msg.longDescription} />
	<meta name="author" content={SITE.author.name.full} />

	<!-- Open Graph tags -->
	<meta property="og:title" content={msg.title} />
	<meta property="og:description" content={msg.description} />
	<meta property="og:url" content={SITE.url.base} />
	<meta property="og:type" content="website" />
	<meta property="og:locale" content={currentLocaleId} />
	<!-- Unofficial tag -->
	<meta property="og:logo" content={pathToAbsoluteUrl(logoSvg.src)} />

	<!-- Twitter tags (some are omitted because X falls back to Open Graph tags) -->
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:creator" content={SITE.author.username.x} />

	<SocialImageMetadata />

	<meta name="msapplication-navbutton-color" content={THEME.default.color} />
	<meta name="msapplication-TileColor" content={THEME.default.color} />
	<meta name="theme-color" content={THEME.default.color} />
	<meta name="apple-mobile-web-app-status-bar-style" content="black" />

	<!-- Icons -->
	<link rel="icon" sizes="48x48 32x32 24x24 16x16" href={iconIco} />
	<link
		rel="apple-touch-icon"
		sizes={`${appleTouchIcon.options.width}x${appleTouchIcon.options.height}`}
		href={appleTouchIcon.src}
	/>
	<link rel="icon" sizes="any" type="image/svg+xml" href={iconSvg.src} />

	<link rel="sitemap" href={`/${SITE.sitemapPrefix}-index.xml`} />

	<!-- Fonts -->
	{FONTS.map(({ cssVariable }) => <Font {cssVariable} preload />)}

	<!-- JSON-LD WebApplication -->
	<script
		is:inline
		type="application/ld+json"
		set:html={JSON.stringify({
			'@context': 'https://schema.org',
			'@type': 'WebApplication',
			name: msg.title,
			url: SITE.url.base,
			description: msg.description,
			applicationCategory: 'Utility',
			operatingSystem: 'All',
			browserRequirements: msg.requirements,
			creator: {
				'@type': 'Person',
				name: SITE.author.name,
				url: SITE.author.url.homepage,
				sameAs: [SITE.author.url.github, SITE.author.url.linkedin],
			},
			offers: {
				'@type': 'Offer',
				price: '0',
				priceCurrency: 'CAD',
			},
			featureList: msg.features,
			keywords: msg.keywords,
		})}
	/>

	<slot />
</CapoHead>

<script>
	import { $theme } from '@stores/index.ts';

	// TODO: Move to constants
	const META_TAG_SELECTOR_ATTRIBUTES = [
		'meta[name=msapplication-navbutton-color]',
		'meta[name=msapplication-TileColor]',
		'meta[name=theme-color]',
		'meta[name=apple-mobile-web-app-status-bar-style]',
	] as const;
	const BASE_COLOR_VARIABLE_NAME = '--bg-1' as const;

	const metaTags = META_TAG_SELECTOR_ATTRIBUTES.map((metaTagSelector) =>
		document.head.querySelector(metaTagSelector),
	);

	// Update the layout when the theme changes
	$theme.subscribe(() => {
		// Update colors in meta tags
		const styleMap = window.getComputedStyle(document.body);
		const baseColor = styleMap.getPropertyValue(BASE_COLOR_VARIABLE_NAME);

		for (const metaTag of metaTags) {
			metaTag?.setAttribute('content', baseColor);
		}
	});
</script>
